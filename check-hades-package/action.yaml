name: check-hades-package
description: 'Checks an HADES R package'
runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libssh-dev
          Rscript -e 'install.packages("remotes")'
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - uses: r-lib/actions/setup-r-dependencies@v2
        env:
            GITHUB_PAT: ${{ secrets.GH_TOKEN }}
            R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        env:
            CDM5_ORACLE_CDM_SCHEMA: ${{ secrets.CDM5_ORACLE_CDM_SCHEMA }}
            CDM5_ORACLE_OHDSI_SCHEMA: ${{ secrets.CDM5_ORACLE_OHDSI_SCHEMA }}
            CDM5_ORACLE_PASSWORD: ${{ secrets.CDM5_ORACLE_PASSWORD }}
            CDM5_ORACLE_SERVER: ${{ secrets.CDM5_ORACLE_SERVER }}
            CDM5_ORACLE_USER: ${{ secrets.CDM5_ORACLE_USER }}
            CDM5_POSTGRESQL_CDM_SCHEMA: ${{ secrets.CDM5_POSTGRESQL_CDM_SCHEMA }}
            CDM5_POSTGRESQL_OHDSI_SCHEMA: ${{ secrets.CDM5_POSTGRESQL_OHDSI_SCHEMA }}
            CDM5_POSTGRESQL_PASSWORD: ${{ secrets.CDM5_POSTGRESQL_PASSWORD }}
            CDM5_POSTGRESQL_SERVER: ${{ secrets.CDM5_POSTGRESQL_SERVER }}
            CDM5_POSTGRESQL_USER: ${{ secrets.CDM5_POSTGRESQL_USER }}
            CDM5_SQL_SERVER_CDM_SCHEMA: ${{ secrets.CDM5_SQL_SERVER_CDM_SCHEMA }}
            CDM5_SQL_SERVER_OHDSI_SCHEMA: ${{ secrets.CDM5_SQL_SERVER_OHDSI_SCHEMA }}
            CDM5_SQL_SERVER_PASSWORD: ${{ secrets.CDM5_SQL_SERVER_PASSWORD }}
            CDM5_SQL_SERVER_SERVER: ${{ secrets.CDM5_SQL_SERVER_SERVER }}
            CDM5_SQL_SERVER_USER: ${{ secrets.CDM5_SQL_SERVER_USER }}
            CDM5_REDSHIFT_CDM_SCHEMA: ${{ secrets.CDM5_REDSHIFT_CDM_SCHEMA }}
            CDM5_REDSHIFT_OHDSI_SCHEMA: ${{ secrets.CDM5_REDSHIFT_OHDSI_SCHEMA }}
            CDM5_REDSHIFT_PASSWORD: ${{ secrets.CDM5_REDSHIFT_PASSWORD }}
            CDM5_REDSHIFT_SERVER: ${{ secrets.CDM5_REDSHIFT_SERVER }}
            CDM5_REDSHIFT_USER: ${{ secrets.CDM5_REDSHIFT_USER }}
            CDM5_SPARK_USER: ${{ secrets.CDM5_SPARK_USER }}
            CDM5_SPARK_PASSWORD: ${{ secrets.CDM5_SPARK_PASSWORD }}
            CDM5_SPARK_CONNECTION_STRING: ${{ secrets.CDM5_SPARK_CONNECTION_STRING }}
        with:
          args: 'c("--no-manual", "--as-cran")'
          error-on: '"warning"'
          check-dir: '"check"'

      - name: Upload source package
        if: success() && runner.os == 'macOS' && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: package_tarball
          path: check/*.tar.gz

      - name: Install covr
        if: runner.os == 'macOS'
        run: |
          install.packages("covr")
        shell: Rscript {0}

      - name: Test coverage
        if: runner.os == 'macOS'
        run: covr::codecov()
        shell: Rscript {0}
